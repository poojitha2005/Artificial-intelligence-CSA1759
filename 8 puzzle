import heapq
goal, start = [[1,2,3],[4,5,6],[7,8,0]],[[1,2,3],[4,0,6],[7,5,8]]
dirs = [(-1,0),(1,0),(0,-1),(0,1)]
heap = [(0, start, [])]
while heap:
    _, p, path = heapq.heappop(heap)
    if p == goal:
        print(path + [p])
        break
    i, j = next((r,c) for r,row in enumerate(p) for c,val in enumerate(row) if val == 0)
    for di, dj in dirs:
        ni, nj = i + di, j + dj
        if 0 <= ni < 3 and 0 <= nj < 3:
            new_p = [row[:] for row in p]
            new_p[i][j], new_p[ni][nj] = new_p[ni][nj], new_p[i][j]
            heapq.heappush(heap, (len(path) + 1, new_p, path + [p]))
